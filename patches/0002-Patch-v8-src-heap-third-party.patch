From 7491dcc78090a1f022481eadbbda754719bb2962 Mon Sep 17 00:00:00 2001
From: Ben Noordhuis <info@bnoordhuis.nl>
Date: Tue, 21 Apr 2020 18:15:06 +0200
Subject: [PATCH] Patch v8/src/heap/third-party

Provide a stub `third_party_heap::Heap` implementation to work around
linker erors with Visual Studio.

Refs: https://github.com/bnoordhuis/v8-cmake/issues/10
---
 v8/src/heap/third-party/heap-api-stub.cc | 54 ++++++++++++++++++++++++
 1 file changed, 54 insertions(+)
 create mode 100644 v8/src/heap/third-party/heap-api-stub.cc

diff --git a/v8/src/heap/third-party/heap-api-stub.cc b/v8/src/heap/third-party/heap-api-stub.cc
new file mode 100644
index 0000000..9d71468
--- /dev/null
+++ b/v8/src/heap/third-party/heap-api-stub.cc
@@ -0,0 +1,54 @@
+// Copyright 2020 the V8 project authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "src/heap/third-party/heap-api.h"
+#include "src/execution/isolate-utils-inl.h"
+#include "src/heap/heap-inl.h"
+
+// Work around Visual Studio linker errors when V8_ENABLE_THIRD_PARTY_HEAP
+// is disabled.
+#ifndef V8_ENABLE_THIRD_PARTY_HEAP
+
+namespace v8 {
+namespace internal {
+
+Isolate* Heap::GetIsolateFromWritableObject(HeapObject object) {
+  return GetHeapFromWritableObject(object)->isolate();
+}
+
+}  // namespace internal
+}  // namespace v8
+
+namespace v8 {
+namespace internal {
+namespace third_party_heap {
+
+// static
+std::unique_ptr<Heap> Heap::New(v8::Isolate*) { return nullptr; }
+
+// static
+v8::Isolate* Heap::GetIsolate(Address) { return nullptr; }
+
+AllocationResult Heap::Allocate(size_t, AllocationType, AllocationAlignment) {
+  return AllocationResult();
+}
+
+Address Heap::GetObjectFromInnerPointer(Address) { return 0; }
+
+// static
+bool Heap::InCodeSpace(Address) { return false; }
+
+// static
+bool Heap::InReadOnlySpace(Address) { return false; }
+
+// static
+bool Heap::IsValidHeapObject(HeapObject) { return false; }
+
+bool Heap::CollectGarbage() { return false; }
+
+}  // namespace third_party_heap
+}  // namespace internal
+}  // namespace v8
+
+#endif  // !defined(V8_ENABLE_THIRD_PARTY_HEAP)
-- 
2.20.1

